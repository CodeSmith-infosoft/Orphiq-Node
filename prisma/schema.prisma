// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique @db.VarChar(255)
  password      String    @db.VarChar(255)
  firstName     String?   @map("first_name") @db.VarChar(100)
  lastName      String?   @map("last_name") @db.VarChar(100)
  phoneNumber   String?   @map("phone_number") @db.VarChar(15)
  position      String?   @db.VarChar(100)
  salary        Decimal?  @db.Decimal(10,2)
  aaddharNo     String?   @map("aaddhar_no") @db.VarChar(12)
  panNo         String?   @map("pan_no") @db.VarChar(10)
  birthDate     DateTime? @map("birth_date")
  isActive      Boolean   @default(true) @map("is_active")
  isAdmin       Boolean   @default(false) @map("is_admin")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  department    String?   @db.VarChar(100)
  joiningDate   DateTime? @map("joining_date")
  employeeId    String?   @map("employee_id") @db.VarChar(50)
  endDate       DateTime? @map("end_date")
}

model Attendance {
  id                Int        @id @default(autoincrement())
  employeeId        Int        
  workDate          DateTime   @map("work_date") // date of work

  clockInTimes      DateTime[] @map("clock_in_times")  // all clock-ins for the day
  clockOutTimes     DateTime[] @map("clock_out_times") // all clock-outs for the day

  breakInTimes      DateTime[] @map("break_in_times")  // all break-ins for the day
  breakOutTimes     DateTime[] @map("break_out_times") // all break-outs for the day

  totalWorkMinutes  Int?       @map("total_work_minutes")
  totalBreakMinutes Int?       @map("total_break_minutes")

  createdAt         DateTime   @default(now()) @map("created_at")
  updatedAt         DateTime   @updatedAt @map("updated_at")
}
